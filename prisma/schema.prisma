// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String
  responses Response[]
  createdAt DateTime @default(now())
}

model Questionnaire {
  id        String   @id @default(uuid())
  title     String
  questions Question[]
  createdAt DateTime @default(now())
}

model Question {
  id              String        @id @default(uuid())
  text            String
  type            QuestionType
  questionnaireId String
  questionnaire   Questionnaire @relation(fields: [questionnaireId], references: [id], onDelete: Cascade)
  responses       Response[]
  options         Option[]
  createdAt       DateTime      @default(now())
}

enum QuestionType {
  MULTIPLE_CHOICE
  TRUE_FALSE
  TEXT
}

model Response {
  id         String   @id @default(uuid())
  userEmail  String
  questionId String
  answer     String
  createdAt  DateTime @default(now())
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userEmail], references: [email])
}

model Option {
  id         String   @id @default(uuid())
  text       String
  questionId String
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
}